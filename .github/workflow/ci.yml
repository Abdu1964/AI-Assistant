name: CI Workflow

on: push 

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY}}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY}}
      ANNOTATION_SERVICE_URL: ${{ secrets.ANNOTATION_SERVICE_URL}}
      ADVANCED_LLM_VERSION: ${{ secrets.ADVANCED_LLM_VERSION}}
      ADVANCED_LLM_PROVIDER: ${{ secrets.ADVANCED_LLM_PROVIDER}}
      BASIC_LLM_VERSION: ${{ secrets.BASIC_LLM_VERSION}}
      BASIC_LLM_PROVIDER: ${{ secrets.BASIC_LLM_PROVIDER}}
      QDRANT_CLIENT: ${{ secrets.QDRANT_CLIENT}}
      VECTOR_COLLECTION: ${{ secrets.VECTOR_COLLECTION}}
      USER_COLLECTION: ${{ secrets.USER_COLLECTION}}
      MEM0: ${{ secrets.MEM0}}
      JWT_SECRET: ${{ secrets.JWT_SECRET}}
      FLASK_PORT: ${{ secrets.FLASK_PORT}}  
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      
    services:
      qdrant:
        image: qdrant/qdrant
        ports:
          - 6333:6333
        options: --volume qdrant_data:/qdrant/storage

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Poetry
      run: python -m pip install --upgrade pip && pip install poetry

    - name: Install dependencies
      run: poetry install

    - name: Run tests
      run: |
          pytest

